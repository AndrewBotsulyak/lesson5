using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication167
{
    class Program
    {
        static void Main(string[] args)
        {
            User a = new User("Andrew", "Skaters_Only3");

            Collection c1 = new Collection();
            c1.Add("Andrew", "1233fddf3");
            c1.Add("Gena", "fgdfg3344");
            c1.Add("Vasya", "rrr");
            c1.Print();
            Console.WriteLine();
            int key = 0;
            string log;
            string pas;

            while(key != 5)
            {
                
                Console.WriteLine("Просмотрт существующих логинов : 1");
                Console.WriteLine("Добавления нового пользователя : 2");
                Console.WriteLine("Удаление пользователя по логину : 3");
                Console.WriteLine("Редактирование пользователя по логину : 4");
                Console.WriteLine("Выход : 5");
                key = Convert.ToInt32(Console.ReadLine());
                switch(key)
                {
                    case 1:
                        Console.Clear();
                        c1.Print();
                        break;
                    case 2:
                        Console.Clear();
                        Console.WriteLine("Введите логин: ");
                        log = Console.ReadLine();
                        Console.WriteLine("Введите пароль: ");
                        pas = Console.ReadLine();
                        c1.Add(log, pas);
                        break;
                    case 3:
                        Console.Clear();
                        Console.WriteLine("Введите логин: ");
                        log = Console.ReadLine();
                        c1.Delete(log);
                        break;
                    case 4:
                        Console.Clear();
                        Console.WriteLine("Введите логин: ");
                        log = Console.ReadLine();
                        c1.Redact(log);
                        break;
                }
            }

        }
    }

    sealed class Collection
    {
        private User[] arr;
        
        public Collection()
        {
            arr = new User[2];
        }
        public void Add(string l, string p)  // Add User
        {
            Count++;

            if(Count > arr.Length)
                {
                    User[] n = new User[arr.Length+2];
                    Array.Copy(arr, n, arr.Length);
                    arr = new User[n.Length];
                    Array.Copy(n, arr, n.Length);
                    arr[Count-1] = new User(l,p);
                return;
                }
            else
            {
                arr[Count - 1] = new User(l, p);
            }
        }

        private int Count // count of users
        {
            get;
            set;
        }

        public string this[int i]
        {
            get
            {
                if(i >= Count || i < 0)
                {
                    throw new IndexOutOfRangeException();
                }
                else
                {
                    return arr[i].Log;
                }
            }
        }

        public void Delete(string l)
        {
            for(int i =0; i < Count;i++)
            {
                if(l == arr[i].Log)
                {
                    Console.Write("Enter password: ");
                    string p = Console.ReadLine();
                    if(arr[i].PasTest(p))
                    {
                        arr[i] = null;
                        Console.WriteLine("Delete is complete.");
                        Count--;
                    }
                    else
                    {
                        Console.WriteLine("Enter Correct password!!!");
                        break;
                    }
                }
            }
        }

        private void Sort()
        {
            for(int i =0; i<arr.Length; i++)
            {
                if(arr[i] == null)
                {
                    for (int j = i; j < arr.Length; j++)
                    {
                        if (arr[j] != null)
                        {
                            arr[i] = arr[j];
                            arr[j] = null;
                            break;
                        }
                    }
                }
            }
        }

        public void Redact(string l)
        {
            for(int i =0;i<Count;i++)
            {
                if(arr[i].Log == l)
                {
                    Console.WriteLine("Для редактирования введите пароль :");
                    string p = Console.ReadLine();
                    if (arr[i].Inspection(l,p))
                    {
                        Console.WriteLine("Введите новый логин: ");
                        l = Console.ReadLine();
                        Console.WriteLine("Введите новый пароль: ");
                        p = Console.ReadLine();
                        arr[i].Redact(l, p);
                        Console.WriteLine("Редактирование прошло успешно !");
                        return;
                    }
                    else
                    { 
                        Console.WriteLine("Неправильный пароль или логин !!!");
                        return;
                    }
                }
            }
        }
        public void Print()
        {
            Sort();
            for(int i = 0; i < arr.Length;i++)
            {
                if (arr[i] == null)
                    break;
                else
                    Console.WriteLine("{0}.User log:{1}", i + 1, arr[i].Log);
            }
        }
    }

    sealed class User
    {
        private string log;
        private char[] pas;
        int key;


        public User(string l,string ar)
        {
            log = l;
            key = 2;
            pas = ar.ToCharArray();
            
            for(int i =0; i < pas.Length ;i++)
            {
                pas[i] = ((char)(pas[i] ^ key));
            }
        }

        public string Log
        {
            get { return log; }
        }
        public void Redact(string l, string p)  
        {
                pas = p.ToCharArray();
                log = l;
        }

        public bool PasTest(string p)
        {
            char[] np = p.ToCharArray();
            for (int i = 0; i < np.Length; i++)
            {
                np[i] = ((char)(np[i] ^ key));
            }
            string a = new string(np);
            string b = new string(pas);
            if (a == b)
                return true;
            else
                return false;
        }

        public bool Inspection(string l,string p)
        {
            if (log == l)
            {
                char[] p2 = p.ToCharArray();
                string k = new string(pas);
                for (int i = 0; i < p.Length;i++ )
                {
                    p2[i] = ((char)(p2[i] ^ key));
                }
                string p3 = new string(p2);
                    if (k == p3)
                    {
                        return true;
                    }
                    else
                        return false;
            }
            else
                return false;
        }
        private void UserChange(string l,string p)
        {
            log = l;
            pas = p.ToCharArray();

            for (int i = 0; i < pas.Length; i++)
            {
                pas[i] = ((char)(pas[i] ^ key));
            }
        }
    }
}
